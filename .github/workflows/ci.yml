name: CI
run-name: ${{ github.actor }} is Running CI
on:
  push:
    branches:
      - development
      - main
  pull_request:
    branches:
      - development
      - main

env:
  REGISTRY: "cloud.canister.io:5000"
  PROJECT_NAME: "eiger"
  GROUP_NAME: "abxsantos"
  IMAGE_FULL_NAME: "${REGISTRY}/${GROUP_NAME}/${PROJECT_NAME}"

  # Used in database and django
  POSTGRES_DB: "postgres"
  POSTGRES_USER: "${POSTGRES_DB}"
  POSTGRES_PASSWORD: "{POSTGRES_DB}"

  # Used only by django:
  DOMAIN_NAME: "web-prd"
  DJANGO_DATABASE_HOST: "db"
  DJANGO_DATABASE_PORT: "5432"
  SELENIUM_HUB_URL: "http://selenium:4444/wd/hub"
  LIVE_SERVER_HOST: "web"
  DJANGO_SECRET_KEY: "sxS#F1@TVJl4-]S?E}6~<B_VP9Q8rUX;8`I(k5_Q/1oL97J<-"

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker registry
        run: |
          docker login -u "${{ secrets.REGISTRY_USER }}" -p "${{ secrets.REGISTRY_PASSWORD }}" "cloud.canister.io:5000"

      - name: Build and run checks
        run: |
          docker-compose build --build-arg BUILDKIT_INLINE_CACHE=1 --progress=plain --cache-from "${IMAGE_FULL_NAME}:dev" web
          docker-compose up ci

      - name: Check image size
        run: |
          docker image inspect "${PROJECT_NAME}:dev" --format='{{.Size}}'

      - name: Push image to registry
        run: |
          docker tag "${{ env.PROJECT_NAME }}:dev" "${{ env.IMAGE_FULL_NAME }}:dev"
          docker push "${{ env.IMAGE_FULL_NAME }}:dev"

  functional-tests:
    runs-on: ubuntu-latest
    needs: [ci]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Run functional tests
        run: |
          docker-compose up functional-tests

  unit-tests:
    runs-on: ubuntu-latest
    needs: [ci]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Run unit tests
        run: |
          docker-compose up tests

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: [functional-tests, unit-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker registry
        run: |
          docker login -u "${{ secrets.REGISTRY_USER }}" -p "${{ secrets.REGISTRY_PASSWORD }}" "${REGISTRY}"

      - name: Build web-prd service
        run: |
          docker-compose build --build-arg BUILDKIT_INLINE_CACHE=1 --progress=plain web-prd

      - name: Check image size
        run: |
          docker image inspect "${PROJECT_NAME}:latest" --format='{{.Size}}'

      - name: Push image to registry
        run: |
          docker tag "${{ env.PROJECT_NAME }}:latest" "${{ env.IMAGE_FULL_NAME }}:${{ github.sha }}"
          docker push "${{ env.IMAGE_FULL_NAME }}:${{ github.sha }}"

      - name: Deploy to fly.io
        uses: superfly/flyctl-actions@master
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        with:
          args: deploy --config ./fly.toml --local-only --image "${{ env.IMAGE_FULL_NAME }}:${{ github.sha }}"

  release:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - uses: actions/checkout@v2
      - name: Semantic Release
        run: |
          pip install python-semantic-release
          git config user.name github-actions
          git config user.email github-actions@github.com
          semantic-release publish
